<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<groupId>com.lifetech.dx</groupId>
		<artifactId>ReporterDx-Wrapper</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>reporterDx-ui</artifactId>
	<packaging>war</packaging>
	<name>reporterDx-ui</name>
	<description>reporterDx - ${project.parent.version}</description>


	<dependencies>
		<!-- Services Dependencies - need to be below the Stub Dependencies -->
		<dependency>
			<groupId>com.lifetechnologies.iontorrent.ionreporter</groupId>
			<artifactId>mgc-services-api</artifactId>
			<version>${mgc-services-api.version}</version>
		</dependency>
		<dependency>
			<groupId>com.lifetech.dx</groupId>
			<artifactId>reporterDx-db</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>com.lifetech.dx</groupId>
			<artifactId>reporterDx-service</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.lifetechnologies.iontorrent.ionreporter</groupId>
			<artifactId>ir-services-api</artifactId>
			<version>${ir-services-api.version}</version>
		</dependency>
		<dependency>
			<groupId>com.lifetech.dx</groupId>
			<artifactId>common-services-api</artifactId>
			<version>${common-services-api.version}</version>
		</dependency>
		<dependency>
			<groupId>com.lifetechnologies.iontorrent.ionreporter</groupId>
			<artifactId>ir-services-api-mixins</artifactId>
			<version>${ir-services-api-mixins.version}</version>
		</dependency>
		<dependency>
			<groupId>com.lifetechnologies.iontorrent.ionreporter</groupId>
			<artifactId>mgc-services-api-mixins</artifactId>
			<version>${mgc-services-api-mixins.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate-core.version}</version>
			<scope>${stub.scope}</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-envers</artifactId>
			<version>${hibernate-envers.version}</version>
			<scope>${stub.scope}</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${spring-data-jpa.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- Spring Data Commons for Paging & Sorting -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
			<version>${spring.data.common.version}</version>
		</dependency>

		<!-- Spring Security & JAAS -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-servlet-api</artifactId>
			<version>${tomcat-servlet-api.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
			<version>7.0.27</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson-core.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson-annotations.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-databind.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>${jaxb-api.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j-log4j12.version}</version>
		</dependency>

		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>${cglib-nodep.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>${commons-collections.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons-lang.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${commons-logging.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectjweaver.version}</version>
		</dependency>
		<dependency>
			<groupId>aopalliance</groupId>
			<artifactId>aopalliance</artifactId>
			<version>${aopalliance.version}</version>
		</dependency>
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>${itext.version}</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
			<exclusions>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>apache-log4j-extras</artifactId>
			<version>${apache-log4j-extras.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>${commons-dbcp.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>${stub.scope}</scope>
		</dependency>
		<!-- Thymeleaf & Thymeleaf add-ons -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring3</artifactId>
			<version>${thymeleaf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity3</artifactId>
			<version>${thymeleaf.extras.version}</version>
		</dependency>
		<dependency><!-- Including this because thymeleaf-extras-springsecurity3 
				seems to need it -->
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-acl</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>nz.net.ultraq.thymeleaf</groupId>
			<artifactId>thymeleaf-layout-dialect</artifactId>
			<version>${thymeleaf-layout-dialect.version}</version>
		</dependency>
		<!-- End Thymeleaf -->

		<!-- Handlebars for server-side JS Templates -->
		<dependency>
			<groupId>com.github.jknack</groupId>
			<artifactId>handlebars-springmvc</artifactId>
			<version>${github.jknack.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons-fileupload.version}</version>
		</dependency>

		<!-- JSR 303 with Hibernate Validator -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${validation-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>

		<!-- Start Selenium Depedencies -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<!-- Note that this only works up to Firefox 17. -->
			<version>${selenium.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>${code.findbugs.jsr305.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>${google.inject.guice.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.detro.ghostdriver</groupId>
			<artifactId>phantomjsdriver</artifactId>
			<version>${github.detro.ghostdriver.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-server</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>${commons-pool.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>pl.pragmatists</groupId>
			<artifactId>JUnitParams</artifactId>
			<version>${JUnitParams.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- End Selenium Depedencies -->

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>${json-path.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path-assert</artifactId>
			<version>${json-path-assert.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>nl.jqno.equalsverifier</groupId>
			<artifactId>equalsverifier</artifactId>
			<version>${equalsverifier.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.maven-play-plugin.net.tanesha.recaptcha4j</groupId>
			<artifactId>recaptcha4j</artifactId>
			<version>${recaptcha4j.version}</version>
		</dependency>
	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>phantomjs</exclude>
				</excludes>
				<filtering>true</filtering>
			</resource>
		</resources>
		<filters>
			<filter>src/main/resources/META-INF/spring/config.properties</filter>
		</filters>
		<finalName>ir</finalName>		
		<plugins>
		      <plugin>
			<artifactId>maven-resources-plugin</artifactId>
			<version>2.7</version>
			<executions>
			  <execution>
			    <id>copy-resources</id>
			    <!-- here the phase you need -->
			    <phase>validate</phase>
			    <goals>
			      <goal>copy-resources</goal>
			    </goals>
			    <configuration>
			      <outputDirectory>${project.build.directory}/ir/WEB-INF/lib</outputDirectory>
			      <resources>          
				<resource>
				  <directory>jars</directory>
				   <includes>
				   <include>lucene-core-4.0.0.jar</include>
				   </includes>
				</resource>
			      </resources>              
			    </configuration>            
			  </execution>
			</executions>
		      </plugin>	
			<!--<plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>buildnumber-maven-plugin</artifactId> 
				<version>1.3</version> <executions> <execution> <id>generate-buildnumber</id> 
				<phase>generate-resources</phase> <goals> <goal>create</goal> </goals> <configuration> 
				<useLastCommittedRevision>true</useLastCommittedRevision> </configuration> 
				</execution> </executions> <configuration> <doCheck>false</doCheck> <doUpdate>false</doUpdate> 
				</configuration> </plugin> -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/integration/**</exclude>
						<exclude>**/integrated/**</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webResources>
						<resource>
							<!-- Copy files optimized/concatenated by RequireJS over the unoptimized 
								files -->
							<directory>${basedir}/target</directory>
							<!-- So that if we didn't run the optimizer and the folder isn't present, 
								there won't be an error. -->
							<includes>
								<include>rjs-output/js/_app.js</include>
								<include>rjs-output/js/_login.js</include>
								<include>rjs-output/js/_lib.js</include>
							</includes>
							<targetPath>public-resources/js</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<!-- definition for [m2e 1.0-] -->
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.lesscss</groupId>
										<artifactId>lesscss-maven-plugin</artifactId>
										<versionRange>[1.3.3,)</versionRange>
										<goals>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>true</runOnIncremental>
											<runOnConfiguration>false</runOnConfiguration>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.7,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>true</runOnIncremental>
											<runOnConfiguration>false</runOnConfiguration>
										</execute>
									</action>
								</pluginExecution>
								<!--<pluginExecution> <pluginExecutionFilter> <groupId>org.codehaus.mojo</groupId> 
									<artifactId>buildnumber-maven-plugin</artifactId> <versionRange>1.3</versionRange> 
									<goals> <goal>set-properties</goal> </goals> </pluginExecutionFilter> <action> 
									<execute> <runOnIncremental>true</runOnIncremental> <runOnConfiguration>false</runOnConfiguration> 
									</execute> </action> </pluginExecution> -->
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
	<profile>
			<id>OEM</id>
			<properties>
				<oem.resource.path>${basedir}/../../OEM</oem.resource.path>				
			</properties>
			<build>
				<plugins>
				<plugin>					
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.7</version>
					<executions>
							<execution>
								<id>copy-OEM-resources</id>								 
								<phase>process-resources</phase> 
								<goals>
									<goal>copy-resources</goal>
								</goals> 
								<configuration>
								<outputDirectory>${basedir}/target/classes</outputDirectory>
								<overwrite>true</overwrite>									
									<resources>
										<resource>
											<directory>${oem.resource.path}/ui/resources</directory> 
                                            <filtering>true</filtering>											
										</resource>									
									</resources>
									<filters>
			                               <filter>src/main/resources/META-INF/spring/config.properties</filter>
		                            </filters>
								</configuration>							
							</execution>
					</executions> 
					</plugin>
                 <plugin>
                     <groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>						
						<warSourceDirectory>${oem.resource.path}/ui/webapp</warSourceDirectory>							
						</configuration>				
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release.version</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.codehaus.mojo</groupId>
						<artifactId>buildnumber-maven-plugin</artifactId>
						<version>1.3</version>
						<executions>
							<execution>
								<goals>
									<goal>create-timestamp</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
                                                        <doCheck>false</doCheck>
                                                        <doUpdate>false</doUpdate>
                                                </configuration>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.6</version>
						<executions>
							<execution>
								<id>copy-resources</id>
								<!-- here the phase you need -->
								<phase>process-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/src/main/resources/META-INF/spring</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/build</directory>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>version</id>
			<activation>
				<property>
					<name>api</name>
					<value>!impl</value>
				</property>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>src/main/build</directory>
						<includes>
							<include>**/version.properties</include>
						</includes>
						<targetPath>META-INF/spring</targetPath>
						<filtering>true</filtering>
					</resource>
				</resources>
				<plugins>
					<plugin>
        					<groupId>org.codehaus.mojo</groupId>
					        <artifactId>buildnumber-maven-plugin</artifactId>
        					<version>1.3</version>
        					<executions>
					        	<execution>
					            		<phase>validate</phase>
							        <goals>
							              <goal>create-timestamp</goal>
            							</goals>
						        </execution>
        					</executions>
        					<configuration>
					        	<doCheck>false</doCheck>
          						<doUpdate>false</doUpdate>
        					</configuration>
      					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Stub Service Impl Profile -->
		<profile>
			<id>api-stub</id>
			<activation>
				<property>
					<name>api</name>
					<value>!impl</value>
				</property>
			</activation>
			<properties>
				<test.data.onload>true</test.data.onload>
				<tomcat.use.test.classpath>true</tomcat.use.test.classpath>
				<stub.scope>compile</stub.scope>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<webResources>
								<resource>
									<directory>target</directory>
									<targetPath>public-resources/js</targetPath>
									<includes>
										<include>/rjs-output/js/_*.js</include>
									</includes>
								</resource>
							</webResources>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>stub-dependencies</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<includeArtifactIds>mgc-services-stub</includeArtifactIds>
									<includeClassifiers></includeClassifiers>
									<includeScope>compile</includeScope>
									<includes>com/lifetech/ionreporter/mgc/services/model/**</includes>
									<outputDirectory>${project.build.directory}/classes</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>compressjs</id>
			<properties>
				<requirejs.optimize.minification>uglify</requirejs.optimize.minification>
			</properties>
		</profile>

		<profile>
			<id>optimizejs</id>
			<properties>
				<optimizejs>true</optimizejs>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>determine-optimizejs-files</id>
								<phase>prepare-package</phase>
								<configuration>
									<!-- Export the ${requirejs.app.include.list} property so it be 
										can by the requirejs-maven-plugin -->
									<exportAntProperties>true</exportAntProperties>
									<target>
										<fileset id="my-fileset" dir="src/main/webapp/public-resources/js/">
											<include name="app/**" />
											<include name="utils/**" />
											<include name="workflows/**" />
										</fileset>
										<pathconvert targetos="unix" pathsep=","
											property="requirejs.app.include.list" refid="my-fileset">
											<map from="${basedir}/src/main/webapp/public-resources/js/"
												to="" />
											<chainedmapper>
												<regexpmapper
													from="^${basedir}/src/main/webapp/public-resources/js/(.*)\.js$$"
													to="'\1'" />
												<regexpmapper from="^'app/(.*)'$$" to="'\1'" />
											</chainedmapper>
										</pathconvert>
										<echo>${requirejs.app.include.list}</echo>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.github.mcheely</groupId>
						<artifactId>requirejs-maven-plugin</artifactId>
						<version>${github.mcheely.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>optimize</goal>
								</goals>
								<!-- By default this would run in process-classes but then cobertura 
									runs it again - which is slow. So we run this here. -->
								<phase>prepare-package</phase>
							</execution>
						</executions>
						<configuration>
							<!-- path to optimizer json config file -->
							<configFile>
								${basedir}/src/main/config/rjs-config.js
							</configFile>
							<!-- process the rjs-config.js using maven filters -->
							<filterConfig>true</filterConfig>
							<skip>${requirejs.optimize.skip}</skip>
						</configuration>
					</plugin>
					<plugin>
						<!-- copy over the optimized JS files to src/main/webapp for local 
							development testing when using tomcat7:run -->
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-context</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/src/main/webapp/public-resources/js/</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/target/rjs-output/js</directory>
											<includes>
												<include>_*.js</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Service API Impl Profile -->
		<profile>
			<id>api-impl</id>
			<activation>
				<property>
					<name>api</name>
					<value>impl</value>
				</property>
			</activation>
			<properties>
				<!-- Ensure JSHint, Jasmine & Sage are disabled as a part of our api-impl 
					profile-based build -->
				<cobertura.check.haltOnFailure>false</cobertura.check.haltOnFailure>
				<jshint.skip>true</jshint.skip>
				<skipJasmineTests>true</skipJasmineTests>
				<saga.skipTests>true</saga.skipTests>
			</properties>
		</profile>

		<profile>
			<id>phantomjs</id>
			<properties>
				<jasmine.maven.plugin.webDriverClassName>org.openqa.selenium.phantomjs.PhantomJSDriver</jasmine.maven.plugin.webDriverClassName>
			</properties>
		</profile>

		<profile>
			<id>ghostdriver</id>
			<properties>
				<jasmine.maven.plugin.webDriverClassName>org.openqa.selenium.phantomjs.PhantomJSDriver</jasmine.maven.plugin.webDriverClassName>
				<selenium.driver.type>phantomjs</selenium.driver.type>
			</properties>
		</profile>

		<profile>
			<id>parallel</id>
			<activation>
				<property>
					<name>parallel</name>
				</property>
			</activation>
			<properties>
				<selenium.threadsCountedPerCore>true</selenium.threadsCountedPerCore>
				<selenium.thread.count>4</selenium.thread.count>
				<selenium.parallelization>classes</selenium.parallelization>
			</properties>
		</profile>

		<profile>
			<id>single</id>
			<activation>
				<property>
					<name>!parallel</name>
				</property>
			</activation>
			<properties>
				<selenium.threadsCountedPerCore>false</selenium.threadsCountedPerCore>
				<selenium.thread.count>1</selenium.thread.count>
				<selenium.parallelization>classes</selenium.parallelization>
			</properties>
		</profile>

		<!-- Test Data Onload Profile - currently paired with Stub -->
		<profile>
			<id>integration-test</id>
			<activation>
				<property>
					<name>api</name>
					<value>!impl</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>reserve-network-port</id>
								<goals>
									<goal>reserve-network-port</goal>
								</goals>
								<phase>pre-integration-test</phase>
								<configuration>
									<portNames>
										<portName>tomcat.http.port</portName>
										<portName>tomcat.ajp.port</portName>
									</portNames>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.14.1</version>
						<configuration>
							<perCoreThreadCount>${selenium.threadsCountedPerCore}</perCoreThreadCount>
							<parallel>${selenium.parallelization}</parallel>
							<threadCount>${selenium.thread.count}</threadCount>
							<environmentVariables>
								<!-- Must set URL directly here because we need the random port -->
								<ionreporter.webdriver.url>http://localhost:${tomcat.http.port}/ir/</ionreporter.webdriver.url>
								<firefox.binary.path>${firefox.binary.path}</firefox.binary.path>
							</environmentVariables>
							<skip>${selenium.skip}</skip>
							<includes>
								<include>**/integration/**</include>
							</includes>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- <plugin> <groupId>org.apache.tomcat.maven</groupId> <artifactId>tomcat7-maven-plugin</artifactId> 
						<version>${tomcat7-maven-plugin.version}</version> <configuration> <server>tomcat_7</server> 
						<path>/${project.artifactId}</path> <port>${tomcat.http.port}</port> <httpsPort>${tomcat.https.port}</httpsPort> 
						<ajpPort>${tomcat.ajp.port}</ajpPort> <useTestClasspath>${tomcat.use.test.classpath}</useTestClasspath> 
						<systemProperties> <MockSecurityUtil>true</MockSecurityUtil> </systemProperties> 
						<webapps> <webapp> <groupId>com.lifetechnologies.iontorrent.ionreporter</groupId> 
						<artifactId>IgvServlet</artifactId> <version>${igvservlet.version}</version> 
						<type>war</type> <asWebapp>true</asWebapp> </webapp> <webapp> <groupId>com.lifetechnologies.fiveam</groupId> 
						<artifactId>compendia-ir</artifactId> <version>${compendia.version}</version> 
						<type>war</type> <asWebapp>true</asWebapp> </webapp> </webapps> </configuration> 
						<executions> <execution> <id>start-tomcat-integration-test</id> <phase>pre-integration-test</phase> 
						<goals> <goal>run</goal> </goals> <configuration> <fork>true</fork> <useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader> 
						</configuration> </execution> <execution> <id>stop-tomcat-integration-test</id> 
						<phase>post-integration-test</phase> <goals> <goal>shutdown</goal> </goals> 
						</execution> </executions> </plugin> -->
				</plugins>
			</build>
		</profile>

		<profile>
			<id>mvn-ui</id>
			<activation>
				<file>
					<missing>node_modules</missing>
				</file>
				<property>
					<name>!grunt</name>
				</property>
			</activation>
		</profile>

		<profile>
			<id>grunt</id>
			<activation>
				<file>
					<exists>node_modules</exists>
				</file>
				<property>
					<name>grunt</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>grunt-npm-install</id>
								<phase>validate</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${npm.binary.path}</executable>
									<arguments>
										<argument>install</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>grunt-jshint</id>
								<phase>validate</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<skip>${jshint.skip}</skip>
									<executable>${grunt.binary.path}</executable>
									<arguments>
										<argument>newer:jshint</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>grunt-less</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${grunt.binary.path}</executable>
									<arguments>
										<argument>newer:less</argument>
									</arguments>
								</configuration>
							</execution>
							<!-- Jasmine with Coverage -->
							<execution>
								<id>grunt-jasmine</id>
								<phase>verify</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<skip>${skipJasmineTests}</skip>
									<executable>${grunt.binary.path}</executable>
									<arguments>
										<argument>${grunt.jasmine.test.type}</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
